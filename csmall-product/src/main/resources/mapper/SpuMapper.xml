<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xiwang.csmall.product.mapper.SpuMapper">

    <!-- int insert(Spu spu); -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO pms_spu (id, name, type_number, title, description,
                             list_price, stock, stock_threshold, unit, brand_id,
                             brand_name, category_id, category_name, attribute_template_id, album_id,
                             pictures, keywords, tags, sales, comment_count,
                             positive_comment_count, sort, is_deleted, is_published, is_new_arrival,
                             is_recommend, is_checked, gmt_check)
        VALUES (#{id}, #{name}, #{typeNumber}, #{title}, #{description},
                #{listPrice}, #{stock}, #{stockThreshold}, #{unit}, #{brandId},
                #{brandName}, #{categoryId}, #{categoryName}, #{attributeTemplateId}, #{albumId},
                #{pictures}, #{keywords}, #{tags}, #{sales}, #{commentCount},
                #{positiveCommentCount}, #{sort}, #{isDeleted}, #{isPublished}, #{isNewArrival},
                #{isRecommend}, #{isChecked}, #{gmtCheck})
    </insert>

    <!-- int insertBatch(List<Spu> spuList); -->
    <insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO pms_spu (
        id, name, type_number, title, description,
        list_price, stock, stock_threshold, unit, brand_id,
        brand_name, category_id, category_name, attribute_template_id, album_id,
        pictures, keywords, tags, sales, comment_count,
        positive_comment_count, sort, is_deleted, is_published, is_new_arrival,
        is_recommend, is_checked, gmt_check
        ) VALUES
        <foreach collection="list" item="spu" separator=",">
            (
            #{spu.id}, #{spu.name}, #{spu.typeNumber}, #{spu.title}, #{spu.description},
            #{spu.listPrice}, #{spu.stock}, #{spu.stockThreshold}, #{spu.unit}, #{spu.brandId},
            #{spu.brandName}, #{spu.categoryId}, #{spu.categoryName}, #{spu.attributeTemplateId}, #{spu.albumId},
            #{spu.pictures}, #{spu.keywords}, #{spu.tags}, #{spu.sales}, #{spu.commentCount},
            #{spu.positiveCommentCount}, #{spu.sort}, #{spu.isDeleted}, #{spu.isPublished}, #{spu.isNewArrival},
            #{spu.isRecommend}, #{spu.isChecked}, #{spu.gmtCheck}
            )
        </foreach>
    </insert>

    <!-- int deleteById(Long id); -->
    <delete id="deleteById">
        DELETE
        FROM pms_spu
        WHERE id = #{id}
    </delete>

    <!-- int deleteByIds(List<Long> ids); -->
    <delete id="deleteByIds">
        DELETE FROM pms_spu WHERE id IN (
        <foreach collection="array" item="id" separator=",">
            #{id}
        </foreach>
        )
    </delete>

    <!-- int updateById(Spu spu); -->
    <update id="updateById">
        UPDATE
        pms_spu
        <set>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="typeNumber != null">
                type_number=#{typeNumber},
            </if>
            <if test="title != null">
                title=#{title},
            </if>
            <if test="description != null">
                description=#{description},
            </if>
            <if test="listPrice != null">
                list_price=#{listPrice},
            </if>
            <if test="stock != null">
                stock=#{stock},
            </if>
            <if test="stockThreshold != null">
                stock_threshold=#{stockThreshold},
            </if>
            <if test="unit != null">
                unit=#{unit},
            </if>
            <if test="brandId != null">
                brand_id=#{brandId},
            </if>
            <if test="brandName != null">
                brand_name=#{brandName},
            </if>
            <if test="categoryId != null">
                category_id=#{categoryId},
            </if>
            <if test="categoryName != null">
                category_name=#{categoryName},
            </if>
            <if test="attributeTemplateId != null">
                attribute_template_id=#{attributeTemplateId},
            </if>
            <if test="albumId != null">
                album_id=#{albumId},
            </if>
            <if test="pictures != null">
                pictures=#{pictures},
            </if>
            <if test="keywords != null">
                keywords=#{keywords},
            </if>
            <if test="tags != null">
                tags=#{tags},
            </if>
            <if test="sales != null">
                sales=#{sales},
            </if>
            <if test="commentCount != null">
                comment_count=#{commentCount},
            </if>
            <if test="positiveCommentCount != null">
                positive_comment_count=#{positiveCommentCount},
            </if>
            <if test="sort != null">
                sort=#{sort},
            </if>
            <if test="isDeleted != null">
                is_deleted=#{isDeleted},
            </if>
            <if test="isPublished != null">
                is_published=#{isPublished},
            </if>
            <if test="isNewArrival != null">
                is_new_arrival=#{isNewArrival},
            </if>
            <if test="isRecommend != null">
                is_recommend=#{isRecommend},
            </if>
            <if test="isChecked != null">
                is_checked=#{isChecked},
            </if>
            <if test="gmtCheck != null">
                gmt_check=#{gmtCheck},
            </if>
        </set>
        WHERE id=#{id}
    </update>

    <!-- int count(); -->
    <select id="count" resultType="int">
        SELECT count(*)
        FROM pms_spu
    </select>

    <!-- SpuNormalVO getNormalById(Long id); -->
    <select id="getNormalById" resultMap="NormalResultMap">
        SELECT
        <include refid="NormalQueryFields"/>
        FROM
        pms_spu
        WHERE
        id=#{id}
    </select>

    <!-- List<SpuListItemVO> list(); -->
    <select id="list" resultMap="ListResultMap">
        SELECT
        <include refid="ListQueryFields"/>
        FROM
        pms_spu
        ORDER BY
        sort DESC, id DESC
    </select>

    <select id="countByBrand" resultType="java.lang.Integer">
        select count(*)
        from pms_spu
        where brand_id = #{brandId}
    </select>

    <select id="countByAlbum" resultType="java.lang.Integer">
        select count(*)
        from pms_spu
        where brand_id = #{brandId}
    </select>

    <select id="countByCategory" resultType="java.lang.Integer">
        select count(*)
        from pms_spu
        where category_id = #{categoryId}
    </select>

    <sql id="NormalQueryFields">
        <if test="true">
            id,
            name,
            type_number,
            title,
            description,
            list_price,
            stock,
            stock_threshold,
            unit,
            brand_id,
            brand_name,
            category_id,
            category_name,
            attribute_template_id,
            album_id,
            pictures,
            keywords,
            tags,
            sales,
            comment_count,
            positive_comment_count,
            sort,
            is_deleted,
            is_published,
            is_new_arrival,
            is_recommend,
            is_checked,
            check_user,
            gmt_check
        </if>
    </sql>

    <resultMap id="NormalResultMap"
               type="com.xiwang.csmall.product.pojo.vo.SpuNormalVO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="type_number" property="typeNumber"/>
        <result column="title" property="title"/>
        <result column="description" property="description"/>
        <result column="list_price" property="listPrice"/>
        <result column="stock" property="stock"/>
        <result column="stock_threshold" property="stockThreshold"/>
        <result column="unit" property="unit"/>
        <result column="brand_id" property="brandId"/>
        <result column="brand_name" property="brandName"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <result column="attribute_template_id" property="attributeTemplateId"/>
        <result column="album_id" property="albumId"/>
        <result column="pictures" property="pictures"/>
        <result column="keywords" property="keywords"/>
        <result column="tags" property="tags"/>
        <result column="sales" property="sales"/>
        <result column="comment_count" property="commentCount"/>
        <result column="positive_comment_count" property="positiveCommentCount"/>
        <result column="sort" property="sort"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="is_published" property="isPublished"/>
        <result column="is_new_arrival" property="isNewArrival"/>
        <result column="is_recommended" property="isRecommend"/>
        <result column="is_checked" property="isChecked"/>
        <result column="check_user" property="checkUser"/>
        <result column="gmt_check" property="gmtCheck"/>
    </resultMap>

    <sql id="ListQueryFields">
        <if test="true">
            id,
            name,
            type_number,
            title,
            description,
            list_price,
            stock,
            stock_threshold,
            unit,
            brand_id,
            brand_name,
            category_id,
            category_name,
            attribute_template_id,
            album_id,
            pictures,
            keywords,
            tags,
            sales,
            comment_count,
            positive_comment_count,
            sort,
            is_deleted,
            is_published,
            is_new_arrival,
            is_recommend,
            is_checked,
            check_user,
            gmt_check
        </if>
    </sql>

    <resultMap id="ListResultMap"
               type="com.xiwang.csmall.product.pojo.vo.SpuListItemVO">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="type_number" property="typeNumber"/>
        <result column="title" property="title"/>
        <result column="description" property="description"/>
        <result column="list_price" property="listPrice"/>
        <result column="stock" property="stock"/>
        <result column="stock_threshold" property="stockThreshold"/>
        <result column="unit" property="unit"/>
        <result column="brand_id" property="brandId"/>
        <result column="brand_name" property="brandName"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <result column="attribute_template_id" property="attributeTemplateId"/>
        <result column="album_id" property="albumId"/>
        <result column="pictures" property="pictures"/>
        <result column="keywords" property="keywords"/>
        <result column="tags" property="tags"/>
        <result column="sales" property="sales"/>
        <result column="comment_count" property="commentCount"/>
        <result column="positive_comment_count" property="positiveCommentCount"/>
        <result column="sort" property="sort"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="is_published" property="isPublished"/>
        <result column="is_new_arrival" property="isNewArrival"/>
        <result column="is_recommended" property="isRecommend"/>
        <result column="is_checked" property="isChecked"/>
        <result column="check_user" property="checkUser"/>
        <result column="gmt_check" property="gmtCheck"/>
    </resultMap>

</mapper>